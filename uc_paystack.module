<?php

define('UC_PAYSTACK_URL', 'https://test.MyMerchantGateway.com');
function uc_paystack_menu() {
  $items['cart/paystack/complete'] = array(
    'title' => 'Order complete',
    'page callback' => 'uc_paystack_complete',
    // 'page arguments' => array(1, 2),
    'access arguments' => array('access content'),
    // 'access callback' => 'uc_mypayment_completion_access',
    'type' => MENU_CALLBACK,
    'file' => 'uc_paystack.pages.inc',
  );
    return $items;
}
// function uc_mypayment_menu() {
//   $items['cart/mypayment/complete'] = array(
//     'title' => 'Order complete',
//     'page callback' => 'uc_mypayment_complete',
//     'access callback' => 'uc_mypayment_completion_access',
//     'type' => MENU_CALLBACK,
//     'file' => 'uc_mypayment.pages.inc',
//   );
// }
function uc_paystack_uc_payment_gateway() {
  $gateways['uc_paystack'] = array(
    'title' => t('Paystack'),
    'description' => t('Process payments through my custom payment gateway'),
  );
  return $gateways;
}

// ..uc_gestpay_uc_payment_method
function uc_paystack_uc_payment_method() {
  $methods[] = array(
    'id' => 'paystack',
    'name' => t('Paystack'),
    'title' => t('Paystack'),
    'desc' => t('Pay through my paystack'),
    'callback' => 'uc_paystack_method',
    'redirect' => 'uc_paystack_form',
    'weight' => 1,
    'checkout' => TRUE,
  );

  return $methods;
}


function uc_paystack_method($op, &$order) {
  switch ($op) {
    case 'settings':
      $form['test_publickey'] = array(
        '#type' => 'textfield',
        '#title' => t('Test Public Key'),
        '#description' => t('Test Public Key'),
        '#default_value' => variable_get('test_publickey'),
      );
      $form['test_secretkey'] = array(
        '#type' => 'textfield',
        '#title' => t('Test Secret Key'),
        '#description' => t('Test Secret Key'),
        '#default_value' => variable_get('test_secretkey'),
        );
      return $form;
  }
}

function uc_paystack_form($form, &$form_state, $order) {
	// $form['#theme_wrappers'] = array('form');

$form['#theme_wrappers'] = array();
// $form['#theme_wrappers'] = array('form');
  // Collect some information about the order
  $time = time();
  $order_id = $order->order_id;
  $order_total = number_format($order->order_total, 2, '.', '');
  $customer_email = $order->primary_email;
  $cart_id = uc_cart_get_id();

  // Build the data to send to my payment gateway
  function getBaseUrl(){
      // output: /myproject/index.php
      $currentPath = $_SERVER['PHP_SELF'];

      // output: Array ( [dirname] => /myproject [basename] => index.php [extension] => php [filename] => index )
      $pathInfo = pathinfo($currentPath);

      // output: localhost
      $hostName = $_SERVER['HTTP_HOST'];

      // output: http://
      $protocol = strtolower(substr($_SERVER["SERVER_PROTOCOL"],0,5))=='https://'?'https://':'http://';

      // return: http://localhost/myproject/
      return $protocol.$hostName.$pathInfo['dirname']."/";
  }
  function generate_new_code($length = 10){
    $characters = 'RSTUVW01234ABCDEFGHIJ56789KLMNOPQXYZ';
    $charactersLength = strlen($characters);
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, $charactersLength - 1)];
    }
    return $randomString;
  }
  function check_code($code){
      $o_exist = db_query("SELECT * FROM `uc_payment_paystack_codes` WHERE `code` = '".$code."'")->fetchAll();

      if (count($o_exist) > 0) {
          $result = true;
      } else {
          $result = false;
      }

      return $result;
  }
  function generate_code(){
      $code = 0;
      $check = true;

      while ($check) {
          $code = generate_new_code();
          $check = check_code($code);
      }

      return $code;
  }
  $data = array(
    'timestamp' => time(),
    'order_id' => $order->order_id,
    'order_total' => number_format($order->order_total, 2, '.', ''),
    'customer_email' => $order->primary_email,
    'cart_id' => uc_cart_get_id(),
  );

  function getPaystackcode($order_id,$email){
    $o_exist = db_query("SELECT * FROM `uc_payment_paystack_codes` WHERE `order_id` = '".$order_id."'")->fetchAll();

    // echo "<pre>";

    if (count($o_exist) === 0) {
      $code = generate_code();
      $o_exist = db_query("INSERT INTO `uc_payment_paystack_codes` (`code_id`, `order_id`, `code`, `email`) VALUES (NULL, '".$order_id."', '".$code."', '".$email."')");

    } else {
      $code = $o_exist[0]->code;
    }

    return $code;
  }
  $pcode = getPaystackcode($order_id,$order->primary_email);

  $actionurl  = getBaseUrl().'/cart/paystack/complete';
// die('eddd'.getBaseUrl());
  $publickey = variable_get ( 'test_publickey', '' );
	$form['some_text'] = array(
	  '#markup' => '<form accept-charset="UTF-8" id="uc-paystack-form" method="post" action="'.$actionurl.'">
    <input type="hidden" value="'.$data['timestamp'].'" name="timestamp">
    <input type="hidden" value="'.$data['order_id'].'" name="order_id">
    <input type="hidden" value="'.$data['order_total'].'" name="order_total">
    <input type="hidden" value="'.$data['customer_email'].'" name="customer_email">
    <input type="hidden" value="'.$data['cart_id'].'" name="cart_id">
    <input type="hidden" value="'.$pcode.'" name="code">
    <input type="hidden" value="uc_paystack_form" name="form_id">
    <script data-ref="'.$pcode.'" data-amount="'.($data['order_total'] * 100).'" data-email="'.$order->primary_email.'" data-key="pk_test_ef545536556b0431b11fd729ccb7c4b633df1340" src="https://js.paystack.co/v1/inline.js">
	    </script></form>'
	);
	//
  // $form['actions'] = array('#type' => 'actions');
  // $form['actions']['submit'] = array(
  //   '#type' => 'submit',
  //   '#value' => variable_get('my_custom_checkout_label', t('Submit Orders')),
  // );
  return $form;
}

function uc_paystack_gateway_menu() {
  die('ddddss');

  $items['paymentcomplete'] = array(
    'title' => 'Payment Complete',
    'page callback' => 'uc_paystack_complete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}
function uc_paystack_gateway_complete() {
  die('ddddss');

  if (empty($_POST)) {
    watchdog('My Payment Gateway',
             'Received an empty or incomplete response.  Response details: @request_details',
             array('@request_details' =>  print_r($_POST,true)), WATCHDOG_ERROR);

    return 'There was a problem with your payment';
  }

  if ($_POST['status'] == 'SUCCESS') {

    // Insert logic here to make sure payment info can be matched to valid order

    // Assuming all tests passed and payment was successful
    // Complete the order
    uc_payment_enter($order_id, 'uc_paystack', $amount, $order->uid, NULL, $orderId);
    uc_cart_complete_sale($order, variable_get('uc_new_customer_login', FALSE));

    return 'Thank you for your purchase';
  }
}
function uc_paystack_confirm() {

  die();
}

// $comment = t('MyPaymentGateway transaction ID: @PayId', array('@PayId' => $PayId));
//         uc_payment_enter($order->order_id, 'myPaymentGateway', $payment_amount, $order->uid, NULL, $comment);
//

// function my_pay_gateway_menu() {
//   $items['paymentcomplete'] = array(
//     'title' => 'Payment Complete',
//     'page callback' => 'my_pay_gateway_complete',
//     'access arguments' => array('access content'),
//     'type' => MENU_CALLBACK,
//   );
//   return $items;
// }
//
// function my_pay_gateway_complete() {
//
//   if (empty($_POST)) {
//     watchdog('My Payment Gateway',
//              'Received an empty or incomplete response.  Response details: @request_details',
//              array('@request_details' =>  print_r($_POST,true)), WATCHDOG_ERROR);
//
//     return 'There was a problem with your payment';
//   }
//
//   if ($_POST['status'] == 'SUCCESS') {
//
//     // Insert logic here to make sure payment info can be matched to valid order
//
//     // Assuming all tests passed and payment was successful
//     // Complete the order
//     uc_payment_enter($order_id, 'my_pay_gateway', $amount, $order->uid, NULL, $orderId);
//     uc_cart_complete_sale($order, variable_get('uc_new_customer_login', FALSE));
//
//     return 'Thank you for your purchase';
//   }
// }
